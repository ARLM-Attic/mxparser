{"name":"mXparser","tagline":"Math Parser Java C# Library - a flexible mathematical expressions parser for JAVA and C# .NET","body":"![mXparser icon](http://mathspace.pl/wp-content/uploads/2015/12/mxparser-logo-pi-gr.png)\r\n\r\n# mXparser - Math Parser Java C# Library\r\n**mXparser** is **a highly flexible parser of mathematical expressions provided as text**. Software delivers easy to use API for JAVA and C# .NET. \r\n\r\n# Main functionalities:\r\n- **basic operators**, i.e.: +, , *, ^, !\r\n- **[Boolean logic](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/mathcollection/BooleanAlgebra.html)** operators i.e.: or, and, xor\r\n- **[binary relations](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/mathcollection/BinaryRelations.html)** i.e.: =, <, >\r\n- **[math functions](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/mathcollection/MathFunctions.html)** (large library of 1-arg, 2-arg, 3-arg - functions) i.e.: sin, cos, Stirling numbers, log, inverse functions\r\n- **[constants](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/mathcollection/MathConstants.html)** (large library), i.e.: pi, e, golden ratio\r\n- **n-args functions**, i.e.: [greatest common divisor](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/mathcollection/MathFunctions.html#gcd(int...))\r\n- **[iterated summation and product operators](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/mathcollection/NumberTheory.html)**\r\n- **[differentiation and integration](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/mathcollection/NumericalAnalysis.html)**\r\n\r\n\r\n# High flexibility functionalities\r\n- **[user defined constants](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/Constant.html)** and arguments, both free - and dependent on other arguments + possibility of use in functions\r\n- **[user defined functions](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/Function.html)** (both free and depended)\r\n- **[user defined recursive arguments](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/RecursiveArgument.html)** + simple (controlled) recursion (1 recursive argument)\r\n- **[user defined recursive functions / expressions (any)](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/Function.html#setRecursiveMode())** - complex, many arguments, no limitation \r\n- **[internal syntax checking](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/Expression.html#checkSyntax())**\r\n- **[internal help](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/Expression.html#getHelp())**\r\n- other useful functionalities, i.e.: [computing time](http://mathspace.pl/mxparser/api/org/mariuszgromada/math/mxparser/Expression.html#getComputingTime()), expression description.\r\n\r\n# Project documentation\r\n### - [mXparser - API (english)](http://mathspace.pl/mxparser/api/)\r\n### - [mXparser - Tutorial (english)](http://mathspace.pl/mxparser-tutorial/)\r\n### - [MathSpace.pl - site about math with mXparser examples (polish)](http://mathspace.pl/)\r\n### - [MathParser.org - site about mXparser (english)](http://mathparser.org/)\r\n\r\n\r\nBest regards,\r\n*Mariusz Gromada*","google":"UA-69006770-3","note":"Don't delete this file! It's used internally to help with page regeneration."}